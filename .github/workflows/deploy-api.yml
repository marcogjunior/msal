name: Deploy API (.NET) to App Service (AFD Private Link)

on:
  push:
    branches: [ master, main ]
    paths:
      - 'api/**'
      - '.github/workflows/deploy-api.yml'
  pull_request_review:
    types: [submitted]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy-api:
    # Only run on approval OR on push (merge) that touches api/** or workflow
    if: >
      (github.event_name == 'pull_request_review' && github.event.review.state == 'approved')
      || (github.event_name == 'push')
      || (github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest

    env:
      AZURE_RG: ${{ vars.AZURE_RG }}
      WEBAPP_NAME: ${{ vars.WEBAPP_NAME }}
      AFD_PROFILE: ${{ vars.AFD_PROFILE }}
      AFD_ENDPOINT: ${{ vars.AFD_ENDPOINT }}

    steps:
      - uses: actions/checkout@v4
        with:
          # On approval, build exactly what got approved
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Login to Azure (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Build & Publish (.NET)
        run: |
          set -e
          dotnet restore ./api/*.csproj
          dotnet publish ./api/*.csproj -c Release -o "$RUNNER_TEMP/api-publish"
          echo "Publish dir: $RUNNER_TEMP/api-publish"
          ls -la "$RUNNER_TEMP/api-publish"
      
      - name: Package artifact (zip)
        run: |
          cd "$RUNNER_TEMP/api-publish"
          zip -r "$RUNNER_TEMP/api.zip" .
          echo "Zipped to $RUNNER_TEMP/api.zip"
          ls -lh "$RUNNER_TEMP/api.zip"

      - name: Deploy to App Service (zip)
        run: |
          az webapp deploy \
            --resource-group "$AZURE_RG" \
            --name "$WEBAPP_NAME" \
            --type zip \
            --src-path "$RUNNER_TEMP/api.zip"


      - name: Purge AFD endpoint cache
        if: ${{ env.AFD_PROFILE != '' && env.AFD_ENDPOINT != '' }}
        run: |
          az afd endpoint purge \
            --resource-group "$AZURE_RG" \
            --profile-name "$AFD_PROFILE" \
            --endpoint-name "$AFD_ENDPOINT" \
            --content-paths "/*"
