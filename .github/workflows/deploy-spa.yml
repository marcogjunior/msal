name: Deploy SPA (Angular) to Static Website + Purge AFD

on:
  push:
    branches: [ master, main ]
    paths:
      - 'spa/**'
      - '.github/workflows/deploy-spa.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_RG: ${{ vars.AZURE_RG }}
  DEPLOY_SA_NAME: ${{ vars.DEPLOY_SA_NAME }}   # or STORAGE_ACCOUNT_NAME
  STORAGE_ACCOUNT_NAME: ${{ vars.STORAGE_ACCOUNT_NAME }}
  AFD_PROFILE: ${{ vars.AFD_PROFILE }}
  AFD_ENDPOINT: ${{ vars.AFD_ENDPOINT }}
  SPA_ROOT: spa/scaffold

jobs:
  deploy-spa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Guard: package.json must exist
        run: |
          test -f "$SPA_ROOT/package.json" || {
            echo "ERROR: $SPA_ROOT/package.json not found. Commit your Angular project files." >&2
            exit 1
          }

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '${{ env.SPA_ROOT }}/package-lock.json'

      - name: Login to Azure (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Resolve Storage Account name
        id: sa
        run: |
          if [ -n "${DEPLOY_SA_NAME:-}" ]; then
            echo "name=$DEPLOY_SA_NAME" >> "$GITHUB_OUTPUT"
          elif [ -n "${STORAGE_ACCOUNT_NAME:-}" ]; then
            echo "name=$STORAGE_ACCOUNT_NAME" >> "$GITHUB_OUTPUT"
          else
            echo "ERROR: Set repo variable DEPLOY_SA_NAME or STORAGE_ACCOUNT_NAME." >&2
            exit 1
          fi
          echo "AZURE_STORAGE_ACCOUNT=${{ steps.sa.outputs.name }}" >> $GITHUB_ENV

      - name: Install & Build Angular
        working-directory: ${{ env.SPA_ROOT }}
        run: |
          set -e
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
          npm run build --if-present || npx -y @angular/cli@latest ng build --configuration production

      - name: Detect dist output
        id: outpath
        run: |
          FILE=$(find "${{ env.SPA_ROOT }}/dist" -type f -name index.html | head -n1 || true)
          [ -n "$FILE" ] || { echo "Build output not found under ${{ env.SPA_ROOT }}/dist"; exit 1; }
          echo "path=$(dirname "$FILE")" >> "$GITHUB_OUTPUT"

      - name: Enable Static Website (index + 404 â†’ index.html)
        run: |
          az storage blob service-properties update \
            --static-website \
            --index-document index.html \
            --404-document index.html

      - name: Upload to Static Website ($web)
        run: |
          az storage blob upload-batch \
            -s "${{ steps.outpath.outputs.path }}" \
            -d '$web' \
            --overwrite \
            --auth-mode login

      - name: Set no-cache for index.html
        run: |
          az storage blob update \
            --container-name '$web' \
            --name 'index.html' \
            --content-cache-control 'no-cache, no-store, must-revalidate' \
            --auth-mode login || true

      - name: Purge AFD endpoint cache
        if: ${{ env.AFD_PROFILE != '' && env.AFD_ENDPOINT != '' }}
        run: |
          az afd endpoint purge \
            --resource-group "$AZURE_RG" \
            --profile-name "$AFD_PROFILE" \
            --endpoint-name "$AFD_ENDPOINT" \
            --content-paths "/*"
